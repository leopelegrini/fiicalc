FROM alpine:3.15 AS base

# Install packages and remove default server definition
RUN apk --no-cache add \
  curl \
  nginx \
  php8 \
  php8-ctype \
  php8-curl \
  php8-dom \
  php8-fileinfo \
  php8-fpm \
  php8-gd \
  php8-intl \
  php8-json \
  php8-mbstring \
  php8-mysqli \
  php8-opcache \
  php8-openssl \
  php8-phar \
  php8-session \
  php8-xml \
  php8-tokenizer \
  php8-xmlreader \
  php8-zlib \
  supervisor

# Create symlink so programs depending on `php` still function
RUN ln -s /usr/bin/php8 /usr/bin/php

# Configure nginx
COPY docker/prod/nginx.conf /etc/nginx/nginx.conf

# Configure PHP-FPM
COPY docker/prod/fpm-pool.conf /etc/php8/php-fpm.d/www.conf
COPY docker/prod/php.ini /etc/php8/conf.d/custom.ini

# Configure supervisord
COPY docker/prod/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Copy Composer binary from the Composer official Docker image
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Clear cache
RUN rm -rf /var/cache/apk/*

# Expose the port nginx is reachable on
EXPOSE 80

## PRODUCTION

FROM base AS build

# Setup document root
RUN mkdir -p /var/www/app

# Make sure files/folders needed by the processes are accessable when they run under the nobody user
RUN chown -R nobody.nobody /var/www/app && \
  chown -R nobody.nobody /run && \
  chown -R nobody.nobody /var/lib/nginx && \
  chown -R nobody.nobody /var/log/nginx

# Switch to use a non-root user from here on
USER nobody

# Set workdir
WORKDIR /var/www/app

# Add application
COPY --chown=nobody . /var/www/app/

# Make sure files/folders needed by the processes are accessable when they run under the nobody user
RUN chown -R nobody.nobody /var/www/app /run /var/lib/nginx /var/log/nginx

# Let supervisord start nginx & php-fpm
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

RUN composer install --no-interaction --optimize-autoloader --no-dev
